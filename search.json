[{"path":"https://cygei.github.io/epitree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Cyril Geismar Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"epitree","text":"epitree package provides statistical framework comparing posterior distributions transmission trees (soon, phylogenetic trees) generated Bayesian inference.","code":""},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"satistical-framework","dir":"Articles","previous_headings":"","what":"Satistical Framework","title":"epitree","text":"Bayesian reconstruction transmission (phylogenetic) trees yields posterior distributions may differ topology due variations data streams, model parameters, prior specifications. Furthermore, comparing multiple MCMC chains essential assessing convergence. primary function, compare_trees, evaluates null hypothesis supplied trees drawn underlying distribution : Computing pairwise distances nodes within tree. Calculating distances trees. Performing PERMANOVA (see vegan::adonis2) test significant differences chains. ...: Lists data frames containing transmission trees, columns representing case IDs. f_tree: Distance function computing node--node distances within trees (returns square matrix). f_chain: Distance function computing tree--tree distances (returns square matrix). adonis2_args: Additional arguments passed vegan::adonis2().","code":"compare_trees(..., f_tree = patristic, f_chain = euclidean, adonis2_args = list())"},{"path":[]},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"comparing-models","dir":"Articles","previous_headings":"Example","what":"Comparing Models","title":"epitree","text":"Suppose two distinct models producing transmission trees. , simulate two chains 100 trees (20 cases per tree). Chain generated reproduction number (RR) 2, Chain B RR 4. low p-value indicates distributions trees chains differ significantly.","code":"set.seed(123) # Generate 100 trees with R₀ = 2 chainA <- lapply(1:100, function(i){   make_tree(20, R = 2, stochastic = TRUE) |>     igraph::as_long_data_frame() })  # Generate 100 trees with R₀ = 4 chainB <- lapply(1:100, function(i){   make_tree(20, R = 4, stochastic = TRUE) |>      igraph::as_long_data_frame() })  compare_chains(chainA, chainB) #> Warning in att$heading[2] <- deparse(match.call(), width.cutoff = 500L): number #> of items to replace is not a multiple of replacement length #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> (function (formula, data, permutations = 999, method = \"bray\", sqrt.dist = FALSE, add = FALSE, by = NULL, parallel = getOption(\"mc.cores\"), na.action = na.fail, strata = NULL, ...)  #>           Df SumOfSqs      R2      F Pr(>F)     #> Model      1     8052 0.14429 33.388  0.001 *** #> Residual 198    47750 0.85571                   #> Total    199    55802 1.00000                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"using-custom-distance-functions","dir":"Articles","previous_headings":"Example","what":"Using Custom Distance Functions","title":"epitree","text":"package supports custom distance functions, MRCI depth measure described Kendall et al.(2018). See also vignette treespace.","code":"library(treespace) #> Loading required package: ape #> Loading required package: ade4 mrciDepth <- function(tree) {   treespace::findMRCIs(as.matrix(tree))$mrciDepths } compare_chains(chainA, chainB, f_tree = mrciDepth) #> Warning in att$heading[2] <- deparse(match.call(), width.cutoff = 500L): number #> of items to replace is not a multiple of replacement length #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> (function (formula, data, permutations = 999, method = \"bray\", sqrt.dist = FALSE, add = FALSE, by = NULL, parallel = getOption(\"mc.cores\"), na.action = na.fail, strata = NULL, ...)  #>           Df SumOfSqs      R2      F Pr(>F)     #> Model      1   3723.5 0.14315 33.078  0.001 *** #> Residual 198  22288.0 0.85685                   #> Total    199  26011.5 1.00000                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"assessing-model-convergence","dir":"Articles","previous_headings":"Example","what":"Assessing Model Convergence","title":"epitree","text":"assess MCMC convergence, compare multiple chains model specification: model converged, p-value high suggesting chains drawn posterior distribution.","code":"chains <- lapply(1:4, function(i) {   chain_i <- lapply(1:100, function(j) {     make_tree(20, R = 2, stochastic = TRUE) |>       igraph::as_long_data_frame()   })   return(chain_i) }) compare_chains(chains[[1]], chains[[2]], chains[[3]], chains[[4]], adonis2_args = list(permutations = 500)) #> Warning in att$heading[2] <- deparse(match.call(), width.cutoff = 500L): number #> of items to replace is not a multiple of replacement length #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 500 #>  #> (function (formula, data, permutations = 999, method = \"bray\", sqrt.dist = FALSE, add = FALSE, by = NULL, parallel = getOption(\"mc.cores\"), na.action = na.fail, strata = NULL, ...)  #>           Df SumOfSqs      R2      F Pr(>F) #> Model      3      789 0.00611 0.8117 0.8842 #> Residual 396   128352 0.99389               #> Total    399   129141 1.00000"},{"path":"https://cygei.github.io/epitree/articles/epitree.html","id":"note","dir":"Articles","previous_headings":"Example > Assessing Model Convergence","what":"Note","title":"epitree","text":"Randomly shuffling node IDs affect test results distance functions invariant node labelling. Since test focuses tree’s topology branch lengths rather specific identifiers, metrics patristic distances—derived solely tree structure—remain unchanged node IDs permuted. However, custom function depends order specific labels nodes, shuffling influence results.","code":"chainA <- lapply(1:50, function(i) {   make_tree(20, R = 2, stochastic = TRUE) })  chainB <- lapply(1:50, function(i) {   df <- epitree:::shuffle_graph_ids(chainA[[i]]) |>     igraph::as_long_data_frame()   subset(df, select = c(\"from\", \"to\")) })  chainA <- lapply(chainA, igraph::as_long_data_frame)    compare_chains(chainA, chainB) #> Warning in att$heading[2] <- deparse(match.call(), width.cutoff = 500L): number #> of items to replace is not a multiple of replacement length #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> (function (formula, data, permutations = 999, method = \"bray\", sqrt.dist = FALSE, add = FALSE, by = NULL, parallel = getOption(\"mc.cores\"), na.action = na.fail, strata = NULL, ...)  #>          Df SumOfSqs R2  F Pr(>F) #> Model     1        0  0  0      1 #> Residual 98    32758  1           #> Total    99    32758  1  # In contrast, the Chi-Square test will reject the null as it compare # the distribution of of ancestries for each case get_chisq(chainA, chainB) #> Warning in (function (x, y = NULL, correct = TRUE, p = rep(1/length(x), : #> Chi-squared approximation may be incorrect #>  #>  Pearson's Chi-squared test #>  #> data:  count data #> X-squared = 808.73, df = 193, p-value < 2.2e-16"},{"path":"https://cygei.github.io/epitree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cyril Geismar. Author, maintainer.","code":""},{"path":"https://cygei.github.io/epitree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Geismar C (2025). epitree: Statistical Comparison Transmission Phylogenetic Tree Distributions. R package version 0.0.0.9000, https://cygei.github.io/epitree/.","code":"@Manual{,   title = {epitree: Statistical Comparison of Transmission and Phylogenetic Tree Distributions},   author = {Cyril Geismar},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://cygei.github.io/epitree/}, }"},{"path":"https://cygei.github.io/epitree/index.html","id":"epitree","dir":"","previous_headings":"","what":"Statistical Comparison of Transmission and Phylogenetic Tree Distributions","title":"Statistical Comparison of Transmission and Phylogenetic Tree Distributions","text":"epitree package provides statistical framework comparing posterior distributions transmission trees (soon, phylogenetic trees) generated Bayesian inference. employs PERMANOVA (via vegan::adonis2) assess whether trees different models MCMC chains stem underlying distribution.","code":""},{"path":"https://cygei.github.io/epitree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Comparison of Transmission and Phylogenetic Tree Distributions","text":"can install development version epitree GitHub :","code":"# install.packages(\"pak\") pak::pak(\"CyGei/epitree\")"},{"path":"https://cygei.github.io/epitree/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Statistical Comparison of Transmission and Phylogenetic Tree Distributions","text":"","code":"library(epitree) #> Registered S3 methods overwritten by 'adegraphics': #>   method         from #>   biplot.dudi    ade4 #>   kplot.foucart  ade4 #>   kplot.mcoa     ade4 #>   kplot.mfa      ade4 #>   kplot.pta      ade4 #>   kplot.sepan    ade4 #>   kplot.statis   ade4 #>   scatter.coa    ade4 #>   scatter.dudi   ade4 #>   scatter.nipals ade4 #>   scatter.pco    ade4 #>   score.acm      ade4 #>   score.mix      ade4 #>   score.pca      ade4 #>   screeplot.dudi ade4  # Simulate two chains of transmission trees chainA <- lapply(1:100, function(i) {   make_tree(20, R = 2, stochastic = TRUE) |>     igraph::as_long_data_frame() }) chainB <- lapply(1:100, function(i) {   make_tree(20, R = 4, stochastic = TRUE) |>     igraph::as_long_data_frame() })  # Compare the two chains result <- compare_chains(chainA, chainB) #> Warning in att$heading[2] <- deparse(match.call(), width.cutoff = 500L): number #> of items to replace is not a multiple of replacement length print(result) #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> (function (formula, data, permutations = 999, method = \"bray\", sqrt.dist = FALSE, add = FALSE, by = NULL, parallel = getOption(\"mc.cores\"), na.action = na.fail, strata = NULL, ...)  #>           Df SumOfSqs      R2      F Pr(>F)     #> Model      1     7965 0.14791 34.371  0.001 *** #> Residual 198    45884 0.85209                   #> Total    199    53850 1.00000                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://cygei.github.io/epitree/reference/abouheif.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Abouheif distance matrix — abouheif","title":"Compute the Abouheif distance matrix — abouheif","text":"Abouheif distance product number direct descendants node path two nodes. measure number transmission events two nodes.","code":""},{"path":"https://cygei.github.io/epitree/reference/abouheif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Abouheif distance matrix — abouheif","text":"","code":"abouheif(tree)"},{"path":"https://cygei.github.io/epitree/reference/abouheif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Abouheif distance matrix — abouheif","text":"tree data frame representing transmission tree, first column containing infector IDs second infectee IDs.","code":""},{"path":"https://cygei.github.io/epitree/reference/abouheif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Abouheif distance matrix — abouheif","text":"square, symmetric matrix Abouheif distances nodes.","code":""},{"path":"https://cygei.github.io/epitree/reference/abouheif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Abouheif distance matrix — abouheif","text":"","code":"tree <- data.frame(from = c(1, 1, 2, 2, 3, 3), to = c(2, 3, 4, 5, 6, 7)) abouheif(tree) #>   1 2 3  4  5  6  7 #> 1 0 0 0  3  3  3  3 #> 2 0 0 2  0  0  6  6 #> 3 0 2 0  6  6  0  0 #> 4 3 0 6  0  3 18 18 #> 5 3 0 6  3  0 18 18 #> 6 3 6 0 18 18  0  3 #> 7 3 6 0 18 18  3  0"},{"path":"https://cygei.github.io/epitree/reference/compare_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare chains of posterior trees — compare_chains","title":"Compare chains of posterior trees — compare_chains","text":"Performs PERMANOVA (adonis2) test significant differences posterior chains transmission trees.","code":""},{"path":"https://cygei.github.io/epitree/reference/compare_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare chains of posterior trees — compare_chains","text":"","code":"compare_chains(   ...,   f_tree = patristic,   f_chain = euclidean,   adonis2_args = list() )"},{"path":"https://cygei.github.io/epitree/reference/compare_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare chains of posterior trees — compare_chains","text":"... Two posterior chains transmission trees. chain list containing one data frames, data frame represents transmission tree columns (infector) (infectee). f_tree function compute pairwise distances nodes within tree. Must take single tree (data frame) input return square matrix dimensions match number nodes. Default patristic. f_chain function compute distance two chains transmission trees. must take two square matrices (produced f_tree) input return single numeric distance value. Default euclidean. adonis2_args list additional arguments pass vegan::adonis2. Default empty list.","code":""},{"path":"https://cygei.github.io/epitree/reference/compare_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare chains of posterior trees — compare_chains","text":"vegan::adonis2 object containing results PERMANOVA.","code":""},{"path":"https://cygei.github.io/epitree/reference/euclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Euclidean distance between two distance matrices. — euclidean","title":"Calculate the Euclidean distance between two distance matrices. — euclidean","text":"function computes Euclidean distance lower triangular parts two given matrices.","code":""},{"path":"https://cygei.github.io/epitree/reference/euclidean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Euclidean distance between two distance matrices. — euclidean","text":"","code":"euclidean(mat1, mat2)"},{"path":"https://cygei.github.io/epitree/reference/euclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Euclidean distance between two distance matrices. — euclidean","text":"mat1 numeric matrix. mat2 numeric matrix.","code":""},{"path":"https://cygei.github.io/epitree/reference/euclidean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Euclidean distance between two distance matrices. — euclidean","text":"numeric value representing Euclidean distance lower triangular parts mat1 mat2.","code":""},{"path":"https://cygei.github.io/epitree/reference/euclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Euclidean distance between two distance matrices. — euclidean","text":"","code":"mat1 <- matrix(c(1, 2, 3, 4), 2, 2) mat2 <- matrix(c(4, 3, 2, 1), 2, 2) euclidean(mat1, mat2) #> [1] 1"},{"path":"https://cygei.github.io/epitree/reference/get_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Chi-Square or Fisher's test on posterior ancestries — get_chisq","title":"Perform Chi-Square or Fisher's test on posterior ancestries — get_chisq","text":"Test whether distribution infector-infectee pairs differs chains.","code":""},{"path":"https://cygei.github.io/epitree/reference/get_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Chi-Square or Fisher's test on posterior ancestries — get_chisq","text":"","code":"get_chisq(..., method = c(\"chisq\", \"fisher\"), test_args = list())"},{"path":"https://cygei.github.io/epitree/reference/get_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Chi-Square or Fisher's test on posterior ancestries — get_chisq","text":"... Lists data frames, data frame represents transmission tree, columns (infector) (infectee). Two chains can provided. method character string specifying test use: \"chisq\" (default) Chi-Square \"fisher\" Fisher's Exact Test. test_args Additional arguments passed chisq.test fisher.test. Must list.","code":""},{"path":"https://cygei.github.io/epitree/reference/get_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Chi-Square or Fisher's test on posterior ancestries — get_chisq","text":"list class htest containing test results.","code":""},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"Compute Kendall distance matrix Kendall's distance measures depth recent common infector (MRCI) pair nodes respect source (patient 0).","code":""},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"","code":"kendall(tree)"},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"tree data frame representing transmission tree, first column containing infector IDs second infectee IDs.","code":""},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"square, symmetric matrix Kendall's distances nodes.","code":""},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"Metric Compare Transmission Trees - M Kendall · 2018","code":""},{"path":[]},{"path":"https://cygei.github.io/epitree/reference/kendall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Kendall distance matrix Kendall's distance measures the depth of the most recent common infector (MRCI) for each pair of nodes with respect to the source (patient 0). — kendall","text":"","code":"tree <- data.frame(from = c(1, 1, 2, 2, 3, 3), to = c(2, 3, 4, 5, 6, 7)) kendall(tree) #>   1 2 3 4 5 6 7 #> 1 0 0 0 0 0 0 0 #> 2 0 1 0 1 1 0 0 #> 3 0 0 1 0 0 1 1 #> 4 0 1 0 2 1 0 0 #> 5 0 1 0 1 2 0 0 #> 6 0 0 1 0 0 2 1 #> 7 0 0 1 0 0 1 2"},{"path":"https://cygei.github.io/epitree/reference/make_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Transmission Tree — make_tree","title":"Generate a Transmission Tree — make_tree","text":"Creates transmission tree specified number cases branches per case. tree can generated fixed Poisson-distributed branching factors.","code":""},{"path":"https://cygei.github.io/epitree/reference/make_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Transmission Tree — make_tree","text":"","code":"make_tree(num_cases, R = 2, stochastic = FALSE, plot = FALSE)"},{"path":"https://cygei.github.io/epitree/reference/make_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Transmission Tree — make_tree","text":"num_cases Integer. total number cases (nodes) tree. R Integer. fixed number branches per case stochastic FALSE, mean Poisson distribution stochastic TRUE. stochastic Logical. TRUE, number branches per case sampled Poisson distribution mean R. Default FALSE. plot Logical. TRUE, function plot generated tree. Default FALSE.","code":""},{"path":"https://cygei.github.io/epitree/reference/make_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Transmission Tree — make_tree","text":"igraph object representing transmission tree.","code":""},{"path":"https://cygei.github.io/epitree/reference/make_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Transmission Tree — make_tree","text":"","code":"# Generate a deterministic transmission tree deterministic_tree <- make_tree(num_cases = 15, R = 2, stochastic = FALSE, plot = TRUE)   # Generate a stochastic transmission tree random_tree <- make_tree(num_cases = 15, R = 2, stochastic = TRUE, plot = TRUE)"},{"path":"https://cygei.github.io/epitree/reference/patristic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Patristic distance matrix — patristic","title":"Compute the Patristic distance matrix — patristic","text":"patristic distance number generations separating two nodes transmission tree.","code":""},{"path":"https://cygei.github.io/epitree/reference/patristic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Patristic distance matrix — patristic","text":"","code":"patristic(tree)"},{"path":"https://cygei.github.io/epitree/reference/patristic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Patristic distance matrix — patristic","text":"tree data frame representing transmission tree, first column containing infector IDs second infectee IDs.","code":""},{"path":"https://cygei.github.io/epitree/reference/patristic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Patristic distance matrix — patristic","text":"square, symmetric matrix patristic distances nodes.","code":""},{"path":"https://cygei.github.io/epitree/reference/patristic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Patristic distance matrix — patristic","text":"","code":"tree <- data.frame(from = c(1, 1, 2, 2, 3, 3), to = c(2, 3, 4, 5, 6, 7)) patristic(tree) #>   1 2 3 4 5 6 7 #> 1 0 1 1 2 2 2 2 #> 2 1 0 2 1 1 3 3 #> 3 1 2 0 3 3 1 1 #> 4 2 1 3 0 2 4 4 #> 5 2 1 3 2 0 4 4 #> 6 2 3 1 4 4 0 2 #> 7 2 3 1 4 4 2 0"},{"path":"https://cygei.github.io/epitree/reference/process_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a Transmission Tree — process_tree","title":"Process a Transmission Tree — process_tree","text":"attempt validate tree. tree invalid, remove introduction try .","code":""},{"path":"https://cygei.github.io/epitree/reference/process_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a Transmission Tree — process_tree","text":"","code":"process_tree(tree, silent = FALSE)"},{"path":"https://cygei.github.io/epitree/reference/process_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a Transmission Tree — process_tree","text":"tree data frame columns .","code":""},{"path":"https://cygei.github.io/epitree/reference/process_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a Transmission Tree — process_tree","text":"validated potentially cleaned tree.","code":""},{"path":"https://cygei.github.io/epitree/reference/remove_intro.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the Introduction from a Transmission Tree — remove_intro","title":"Remove the Introduction from a Transmission Tree — remove_intro","text":"remove single introduction (row NA column).","code":""},{"path":"https://cygei.github.io/epitree/reference/remove_intro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the Introduction from a Transmission Tree — remove_intro","text":"","code":"remove_intro(tree)"},{"path":"https://cygei.github.io/epitree/reference/remove_intro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the Introduction from a Transmission Tree — remove_intro","text":"tree data frame columns representing transmission tree.","code":""},{"path":"https://cygei.github.io/epitree/reference/remove_intro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove the Introduction from a Transmission Tree — remove_intro","text":"cleaned tree introduction removed.","code":""},{"path":"https://cygei.github.io/epitree/reference/shuffle_graph_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Shuffle Node IDs in a Graph — shuffle_graph_ids","title":"Shuffle Node IDs in a Graph — shuffle_graph_ids","text":"Randomly shuffles IDs nodes given graph optionally plots shuffled graph.","code":""},{"path":"https://cygei.github.io/epitree/reference/shuffle_graph_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shuffle Node IDs in a Graph — shuffle_graph_ids","text":"","code":"shuffle_graph_ids(g, plot = FALSE)"},{"path":"https://cygei.github.io/epitree/reference/shuffle_graph_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shuffle Node IDs in a Graph — shuffle_graph_ids","text":"g igraph object representing graph. plot Logical. TRUE, function plot shuffled graph. Default FALSE.","code":""},{"path":"https://cygei.github.io/epitree/reference/shuffle_graph_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shuffle Node IDs in a Graph — shuffle_graph_ids","text":"igraph object shuffled node IDs.","code":""},{"path":"https://cygei.github.io/epitree/reference/shuffle_graph_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shuffle Node IDs in a Graph — shuffle_graph_ids","text":"","code":"# Create an example graph g <- make_tree(num_cases = 10, R = 2)  # Shuffle the node IDs shuffled_graph <- shuffle_graph_ids(g, plot = TRUE)"},{"path":"https://cygei.github.io/epitree/reference/validate_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a Transmission Tree — validate_tree","title":"Validate a Transmission Tree — validate_tree","text":"Checks transmission tree meets specific topology criteria test. tree must directed acyclic graph (DAG), weakly connected, one infector per node.","code":""},{"path":"https://cygei.github.io/epitree/reference/validate_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a Transmission Tree — validate_tree","text":"","code":"validate_tree(tree)"},{"path":"https://cygei.github.io/epitree/reference/validate_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a Transmission Tree — validate_tree","text":"tree data frame columns representing transmission tree.","code":""},{"path":"https://cygei.github.io/epitree/reference/validate_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a Transmission Tree — validate_tree","text":"Invisible TRUE tree valid. Throws error invalid.","code":""}]
