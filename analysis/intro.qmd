---
title: "Compare posterior sets of transmission trees"
format: html

execute: 
  warning: false
  message: false
---

# Load libraries & scripts

```{r}
pacman::p_load(outbreaker2, ape, igraph, vegan, distcrete, ggplot2, scales)
pacman::p_load_gh("CyGei/o2ools")
devtools::load_all()

```

# `outbreaker2` chains

We are using the default `outbreaker2` data from the [vignette](https://cran.r-project.org/web/packages/outbreaker2/vignettes/introduction.html). But will distinguish the two chains by using different generation time distributions (`gt`).

```{r}
linelist <- data.frame(
  ids = as.character(1:30),
  dates = fake_outbreak$sample
)

# Define two distinct gamma distributions
gt <- lapply(list(
  distcrete("gamma", interval = 1, shape = 2, scale = 3, w = 0.5),
  distcrete("gamma", interval = 1, shape = 2.5, scale = 5, w = 0.5)
), function(d) d$d(1:50))

# Plot the two gamma distributions
plot(1:50, gt[[1]],
  type = "l", col = "blue", lwd = 2,
  xlab = "Time", ylab = "Density"
)
lines(1:50, gt[[2]], col = "red", lwd = 2)
legend("topright",
  legend = c("Shape=2, Scale=5", "Shape=8, Scale=2"),
  col = c("blue", "red"), lwd = 2
)

```

And run multiple (`n_chains`) instances of `outbreaker2`, with **different** generation time distributions. The below will result in `n` distinct posterior chains of transmission trees.

```{r}
n_chains <- 2

set.seed(1)
chains <-
  lapply(1:n_chains, function(i) {
    x <- outbreaker(
      data = outbreaker_data(
        dna = fake_outbreak$dna,
        dates = fake_outbreak$sample,
        ctd = fake_outbreak$ctd,
        w_dens = gt[[i]],
        ids = linelist$ids
      ),
      config = create_config(
        init_pi = 1,
        move_pi = FALSE,
        find_import = FALSE
      )
    )
    x <- x[x$step > 1000, ] # burnin
  })

```

Trace plots of the posterior for each chain

```{r}
plot(chains[[1]])
plot(chains[[2]])
```

## Posterior transmission trees

For each chain, we use the package `o2ools` to convert the default `outbreaker2` dataframe into a list of transmission trees.

```{r}

trees <- lapply(chains, function(chain) {
  t <- o2ools::get_trees(out = chain, ids = linelist$ids, kappa = FALSE)
  t <- lapply(t, function(df) df[-1, ]) # remove introduction
  return(t)
})

cat(
  length(trees[[1]]), "trees in chain #1 | ", length(trees[[2]]), "trees in chain #2", "\n"
)
```

# Statistical test

## Chi-square test
We can compare the posterior frequencies of infector-infectee pairs between chains uing a chi-square test. The null hypothesis (p > 0.05) states that the frequencies of infector-infectee pairs are drawn from the same distribution.

```{r, eval=FALSE}
get_chisq(..., method = c("chisq", "fisher"), test_args = list())
```

```{r}
# compare the two outbreaker2 runs
get_chisq(trees[[1]], trees[[2]])
get_chisq(trees[[1]], trees[[2]],
          method = "chisq",
          test_args = list(simulate.p.value = TRUE,
                           B = 1000))

# bootstrap in the same chain
get_chisq(sample(trees[[1]], 1000, replace = TRUE),
          sample(trees[[1]], 1000, replace = TRUE))

```


## PERMANOVA
Computes the distance between nodes in the transmission tree and then compare the variance within chain and the variance between chains. 

`compare_trees` is the main function used to compare two posterior sets of transmission trees.

```{r, eval=FALSE}
compare_trees(..., f_tree = patristic, f_chain = euclidean, adonis2_args = list())

compare_trees(trees[[1]], trees[[2]], adonis2_args = list(permutations = 2000))
```

-   `...` : Lists of data frames representing transmission trees. Each data frame contains a `from` and `to` column with entries representing case IDs present in the linelist.

-   `f_tree` : function to compute the distance between nodes within a tree. Must return a square matrix.

-   `f_chain` : function to compute the distance between two trees. Must return a square matrix.

-   `adonis2_args` : list containing additional arguments for `vegan::adonis2()`.



```{r}
# same chain
compare_chains(sample(trees[[1]], size = 100, replace = TRUE),
               sample(trees[[1]], size = 100, replace = TRUE))

# different chains
compare_chains(trees[[1]], trees[[2]])
```



Note the [paper](https://onlinelibrary.wiley.com/doi/10.1111/j.1442-9993.2001.01070.pp.x) from Anderson states that there is a ***dispersion*** (variance within group) effect. Even when the ***location*** (i.e. the *centroid* of the group) is the same between two groups, greater dispersion in one group may yield significant differences. We could test this by running 2 iterations of `outbreaker2` one with priors with high uncertainty and one with low uncertainty @Thibaut ?

### Using alternative distance functions

See Kendall's [paper](https://projecteuclid.org/journals/statistical-science/volume-33/issue-1/Estimating-Transmission-from-Genetic-and-Epidemiological-Data--A-Metric/10.1214/17-STS637.full) and [vignette](https://thibautjombart.github.io/treespace/articles/TransmissionTreesVignette.html) from `treespace`.

```{r}
mrciDepth <- function(tree) {
  treespace::findMRCIs(as.matrix(tree))$mrciDepths
}
compare_chains(trees[[1]], trees[[2]], f_tree = mrciDepth)
```

